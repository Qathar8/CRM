import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Navbar } from '@/components/layout/navbar';
import { ContactForm } from '@/components/contacts/contact-form';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow, } from '@/components/ui/table';
import { useContacts } from '@/lib/queries';
import { Plus, Mail, Phone, Building } from 'lucide-react';
export default function ContactsPage() {
    const { data: contacts = [], isLoading } = useContacts();
    const [isContactFormOpen, setIsContactFormOpen] = useState(false);
    if (isLoading) {
        return (_jsxs("div", { className: "min-h-screen bg-gray-50", children: [_jsx(Navbar, {}), _jsx("div", { className: "flex items-center justify-center h-96", children: _jsx("div", { className: "text-lg", children: "Loading contacts..." }) })] }));
    }
    return (_jsxs("div", { className: "min-h-screen bg-gray-50", children: [_jsx(Navbar, {}), _jsxs("div", { className: "flex-1 space-y-4 p-8 pt-6", children: [_jsxs("div", { className: "flex items-center justify-between space-y-2", children: [_jsx("h2", { className: "text-3xl font-bold tracking-tight", children: "Contacts" }), _jsxs(Button, { onClick: () => setIsContactFormOpen(true), children: [_jsx(Plus, { className: "mr-2 h-4 w-4" }), "Add Contact"] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { children: ["All Contacts (", contacts.length, ")"] }) }), _jsx(CardContent, { children: contacts.length === 0 ? (_jsxs("div", { className: "text-center py-8", children: [_jsx("p", { className: "text-muted-foreground mb-4", children: "No contacts yet." }), _jsxs(Button, { onClick: () => setIsContactFormOpen(true), children: [_jsx(Plus, { className: "mr-2 h-4 w-4" }), "Add Your First Contact"] })] })) : (_jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Name" }), _jsx(TableHead, { children: "Company" }), _jsx(TableHead, { children: "Email" }), _jsx(TableHead, { children: "Phone" }), _jsx(TableHead, { children: "Created" })] }) }), _jsx(TableBody, { children: contacts.map((contact) => (_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: contact.name }), _jsx(TableCell, { children: contact.company ? (_jsxs("div", { className: "flex items-center", children: [_jsx(Building, { className: "mr-2 h-4 w-4 text-muted-foreground" }), contact.company] })) : (_jsx("span", { className: "text-muted-foreground", children: "\u2014" })) }), _jsx(TableCell, { children: contact.email ? (_jsxs("div", { className: "flex items-center", children: [_jsx(Mail, { className: "mr-2 h-4 w-4 text-muted-foreground" }), _jsx("a", { href: `mailto:${contact.email}`, className: "text-primary hover:underline", children: contact.email })] })) : (_jsx("span", { className: "text-muted-foreground", children: "\u2014" })) }), _jsx(TableCell, { children: contact.phone ? (_jsxs("div", { className: "flex items-center", children: [_jsx(Phone, { className: "mr-2 h-4 w-4 text-muted-foreground" }), _jsx("a", { href: `tel:${contact.phone}`, className: "text-primary hover:underline", children: contact.phone })] })) : (_jsx("span", { className: "text-muted-foreground", children: "\u2014" })) }), _jsx(TableCell, { className: "text-muted-foreground", children: new Date(contact.created_at).toLocaleDateString() })] }, contact.id))) })] })) })] }), _jsx(ContactForm, { isOpen: isContactFormOpen, onClose: () => setIsContactFormOpen(false) })] })] }));
}
